version: 2.1

orbs:
  coveralls: coveralls/coveralls@1.0.6

workflows:
  version: 2
  run_tests:
    jobs:
      - run_tests
  qa_deploy:
   jobs:
     - qa_deploy:
         filters:
           branches:
             only:
               - qa
  stage_deploy:
    jobs:
      - stage_deploy:
          filters:
            branches:
              only:
                - main
  prod_deploy:
    jobs:
      - prod_deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/

jobs:
  run_tests:
    docker:
      - image: circleci/ruby:2.7.2-node
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          TZ: "America/New_York"

      - image: circleci/postgres:11-alpine
        environment:
          TZ: "America/New_York"
    resource_class: small
    steps:
      - checkout
      - run:
          name: make sure we have the latest bundler
          command: |
            sudo gem update --system
            gem install -f bundler:2.1.4

      - restore_cache:
          keys:
            - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-{{ arch }}-{{ .Branch }}
            - gem-cache-v1

      - run:
          name: bundle install w/ dependent libs
          command: |
            sudo apt-get --allow-releaseinfo-change update
            sudo apt-get update
            sudo apt-get install postgresql-client
            bundle install --path vendor/bundle
      
      - save_cache:
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Set up db for run
          command: |
            sudo psql -c "create role manifold with createdb login password 'password';" -U postgres -h localhost
            RAILS_ENV=test bundle exec rake db:setup

      - run:
          name: Install node packages required for tests
          command: | 
            sudo npm install -g ajv@6.12.6
            sudo npm install -g ajv-cli@3.3.0
      - run:
          name: Ruby Lint
          command: bundle exec rubocop

      - run:
          name: Brakeman
          command: bundle exec brakeman --no-pager

      - run:
          name: Install ActionText
          command: printf "n\nn\n"  | bundle exec rails action_text:install && git clean -f db

      - run:
          name: Ruby tests
          command: |
              bundle exec rspec

      - coveralls/upload:
          path_to_lcov: ./coverage/lcov/app.lcov

  qa_deploy:
    docker:
      - image: circleci/python:3.6.6
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "08:05:8e:1f:ff:2e:4d:59:60:3e:a2:d5:e3:e2:b8:68"
            - "2f:37:66:17:11:ae:f9:0f:9e:52:98:41:fe:d0:0c:78"
      - run:
          command: bash .circleci/deploy-qa.sh

  stage_deploy:
    docker:
      - image: circleci/python:3.6.6
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "08:05:8e:1f:ff:2e:4d:59:60:3e:a2:d5:e3:e2:b8:68"
            - "2f:37:66:17:11:ae:f9:0f:9e:52:98:41:fe:d0:0c:78"
      - run:
          command: bash .circleci/deploy-stage.sh

  prod_deploy:
    docker:
      - image: circleci/python:3.6.6
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "08:05:8e:1f:ff:2e:4d:59:60:3e:a2:d5:e3:e2:b8:68"
            - "2f:37:66:17:11:ae:f9:0f:9e:52:98:41:fe:d0:0c:78"
      - run:
          command: bash .circleci/deploy-prod.sh
